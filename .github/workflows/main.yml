name: CI-CD
on: 
  push:
    branches: ["main"]
  workflow_dispatch:

jobs: 
  CI:
    runs-on: ubuntu-latest
    steps:
      - name: Obtendo o Código
        uses: actions/checkout@v4
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}  

      - name: Construção e envio da imagem docker
        uses: docker/build-push-action@v6
        with:
          context: ./src
          push: true
          file: ./src/Review-Filmes.Web/Dockerfile
          tags: |
            azevedodockerid/devops4dev-review:v${{ github.run_number }}
            azevedodockerid/devops4dev-review:latest            
          
  CD:
    runs-on: ubuntu-latest
    needs: [CI]
    steps:
      - name: Obtendo o Código
        uses: actions/checkout@v4

 ### A próxima ação aqui é fazermos as configurações do ./kubeconfig
 ### Para que possamos nos conectar com o Kubernetes configurado da
 ### mesma forma que fizemos em nossa máquina local.
 ### No Marketplace Github procuramos pela ação "kubernetes set context"    
 
 ###Exemplo:
   #   - name: Configuração do kubeconfig
   #     uses: azure/k8s-set-context@v4
   #     with:
   #       method: kubeconfig
   #       kubeconfig: ${{ secrets.K8S_CONFIG }}
   # --> Criamos essa secret no settings, colocando todos os dados do arquivo "kubeconfig"

   ### Agora precisamos executar comando kubectl, entrando no Marketplace
   ### e procurando por "Deploy to Kubernetes cluster"

    #   - name: Execução do kubectl apply
    #     uses: Azure/k8s-deploy@v5
    #     with:
    #      manifests: |
    #         k8s/deployment.yaml
    #      images: azevedodockerid/devops4dev-review:v${{ github.run_number }}
